<?xml version="1.0"?>
<ruleset name="PHP_CS DWS WordPress">
    <description>Sniff for the coding standards of the DWS WordPress code.</description>

    <!-- Check all PHP files in directory tree by default. -->
	<arg name="extensions" value="php"/>
	<file>.</file>

    <rule ref="Squiz.Commenting.FunctionComment">
        <!-- Ignore custom spacing in function comments. -->
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
        <!-- Ignore missing parameter comments if @inheritDoc is present. -->
        <properties>
            <property name="skipIfInheritdoc" value="true" />
        </properties>
    </rule>

    <!-- Ignore end char rule since it conflicts with PhpStorm's code folding regions. -->
    <rule ref="Squiz.Commenting.InlineComment">
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
    </rule>

    <!-- Since all files contain classes, a file comment seems extraneous. -->
    <rule ref="Squiz.Commenting.FileComment">
        <exclude name="Squiz.Commenting.FileComment.Missing"/>
    </rule>

    <!-- Minimum PHP and WP versions. -->
    <config name="testVersion" value="7.4-"/>
    <config name="minimum_supported_wp_version" value="5.5"/>

	<!-- WordPress coding standards. -->
    <rule ref="WordPress">
        <!-- Exclude as plugin adheres to the PSR-4 standard. -->
        <exclude name="WordPress.Files.FileName"/>
    </rule>

    <!-- Check that the proper text domain(s) is used everywhere. -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <element value="dws-wp-framework-woocommerce"/>
            </property>
        </properties>
    </rule>

    <!-- Allow the forward-slash as a hook delimiter. -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="/"/>
        </properties>
    </rule>

    <!-- Check that all things are properly prefixed. -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array">
                <element value="dws_"/>
                <element value="dws_wp_framework_"/>
                <element value="dws_wp_framework_woocommerce_"/>
                <element value="DeepWebSolutions"/>
            </property>
        </properties>
        <!-- All hooks are auto-generated. This sniff is a false positive. -->
        <exclude name="WordPress.NamingConventions.PrefixAllGlobals.DynamicHooknameFound"/>
    </rule>

    <!-- WooCommerce coding standards. -->
    <rule ref="WooCommerce">
        <!-- Allow the usage of @author tags. -->
        <exclude name="WooCommerce.Commenting.CommentTags.AuthorTag"/>
        <!-- Allow the usage of @copyright tags. -->
        <exclude name="WooCommerce.Commenting.CommentTags.CopyrightTag"/>
        <!-- Allow the usage of @license tags. -->
        <exclude name="WooCommerce.Commenting.CommentTags.LicenseTag"/>
    </rule>

    <!-- Define some special rules for the Codeception tests. -->
    <rule ref="PSR2.Methods.MethodDeclaration">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
    <rule ref="WordPress.NamingConventions">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <!-- Ignore certain folders. -->
    <exclude-pattern>*/bin/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/tests/_support/*</exclude-pattern>

    <!-- Ignore index.php files since they're just empty. -->
    <exclude-pattern>*/index.php</exclude-pattern>
</ruleset>